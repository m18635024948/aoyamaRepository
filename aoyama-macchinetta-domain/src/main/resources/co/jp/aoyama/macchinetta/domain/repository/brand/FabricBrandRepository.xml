<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="co.jp.aoyama.macchinetta.domain.repository.brand.FabricBrandRepository">

	<resultMap id="fabricBrandResultMap" type="FabricBrand">
		<id property="fablicBrandNo" column="fablic_brand_no" />
		<result property="brandName" column="brand_name" />
		<result property="countryName" column="country_name" />
		<result property="version" column="version" />
		<result property="createdUserId" column="created_user_id" />
		<result property="createdAt" column="created_at" />
		<result property="updatedUserId" column="updated_user_id" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>


	<select id="findAllFabricBrand" resultMap="fabricBrandResultMap">
    <![CDATA[
        SELECT
            fablic_brand_no, 
            brand_name, 
            country_name,
            version, 
            created_user_id,
            created_at,
            updated_user_id,
            updated_at
        FROM
            mtb_fabric_brand ORDER by fablic_brand_no   
    ]]>
	</select>
	
	<select id="fuzzyQuery" parameterType="string" resultMap="fabricBrandResultMap">
	
		SELECT fablic_brand_no,brand_name,country_name,version,created_user_id,created_at,updated_user_id,updated_at FROM mtb_fabric_brand 
		WHERE
		<if test="brandName!=null and brandName!=''">
			brand_name LIKE '%${brandName}%' and
		</if>
		<if test="countryName!=null and countryName!=''">
			country_name LIKE '%${countryName}%' and
		</if>
		1 = 1 ORDER by fablic_brand_no
	</select>
	
	<select id="findFabricBrandByPk" parameterType="string" resultType="FabricBrand">
        SELECT
            fablic_brand_no, 
            brand_name, 
            country_name,
            version, 
            created_user_id,
            created_at,
            updated_user_id,
            updated_at
        FROM
            mtb_fabric_brand
        WHERE
            fablic_brand_no = #{fablicBrandNo}
	</select>
	
	<select id="findMaxNo"  resultType="String">
        SELECT
            MAX(fablic_brand_no)
        FROM
            mtb_fabric_brand
	</select>
	
	<insert id="insertFabricBrandByKey" parameterType="java.util.List">
		INSERT INTO mtb_fabric_brand (fablic_brand_no,brand_name,country_name,version,created_user_id,created_at,updated_user_id,updated_at) values
		<foreach collection="fabricBrandInsertList" item="item" index="index" separator=",">
            (#{item.fablicBrandNo},#{item.brandName},#{item.countryName},#{item.version},#{item.createdUserId},#{item.createdAt},#{item.updatedUserId},#{item.updatedAt})
        </foreach>
	</insert>
	
	<update id="updateFabricBrandByKey" parameterType="java.util.List" >
		<foreach collection="fabricBrandUpdList" item="item" index="index" open="" close="" separator=";">
    	UPDATE 
    		mtb_fabric_brand
    	<set> 
    		fablic_brand_no = #{item.fablicBrandNo},
    		brand_name = #{item.brandName},
      		country_name = #{item.countryName},
      		version = #{item.version} + 1,
      		created_user_id = #{item.createdUserId},
      		updated_user_id = #{item.updatedUserId},
      		updated_at = #{item.updatedAt}
     	</set> 
    	WHERE 
			fablic_brand_no = #{item.fablicBrandNo} and version = #{item.version}
    	</foreach>
   </update>
   
	<delete id="deleteFabricBrandByKey" parameterType="java.util.List">
		<foreach collection="fabricBrandDelList" item="item" index="index" open="" separator=";" close="">
			DELETE FROM mtb_fabric_brand WHERE fablic_brand_no = #{item.fablicBrandNo}
		</foreach>
	</delete>
</mapper>
