<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.jp.aoyama.macchinetta.domain.repository.stock.StockRepository">



    <resultMap id="stockResultMap" type="Stock">
    	<id property="orderPattern" column="order_pattern" />
        <id property="fabricNo" column="fabric_no" />
        <result property="color" column="color" />
        <result property="pattern" column="pattern" />
        <result property="brandName" column="brand_name" />
        <result property="factoryName" column="factory_name" />
        <result property="theoreticalStock" column="theoretical_stock" />
        <result property="retailPrice" column="retail_price" />
        <result property="actualStock" column="actual_stock" />
        <result property="reservationStock" column="reservation_stock" />
        <result property="version" column="version" />
        <result property="createdAt" column="created_at" />
        <result property="createdUserId" column="created_user_id" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedUserId" column="updated_user_id" />
        <result property="makerName" column="maker_name" />
        <result property="fablicBrandNo" column="fablic_brand_no" />
        <result property="theoretical" column="theoretical" />
    </resultMap>

    <select id="findAllStock" resultMap="stockResultMap">
        SELECT 
        	order_pattern,
        	a.fabric_no,
			a.color,
			a.pattern,
			b.brand_name,
			c.factory_name,
			a.retail_price,
			d.Theoretical_stock,
			d.actual_stock,
			d.fabric_no,
			d.version
		FROM
     		mtb_fabric AS a,mtb_fabric_brand AS b,mtb_factory AS c,mtb_stock AS d
 		WHERE 
 			a.fablic_brand_no = b.fablic_brand_no
 		AND a.factory_code = c.factory_code
 		AND a.fabric_no = d.fabric_no
 		ORDER by a.fabric_no
    </select>
    
    <select id="findStockByPk" resultMap="stockResultMap">
		SELECT 
			order_pattern,
		    fabric_no, 
            theoretical_stock, 
            actual_stock,
            version, 
            created_at,
            updated_at 
        FROM
            mtb_stock  
		WHERE
			order_pattern = #{orderPattern} and fabric_no = #{fabricNo}
	</select>
	
	<select id="fuzzyQuery" parameterType="string" resultMap="stockResultMap">
		SELECT 
			a.order_pattern,
        	a.fabric_no,
			a.color,
			a.pattern,
			b.brand_name,
			c.factory_name,
			a.retail_price,
			d.reservation_stock,
			d.theoretical_stock,
			d.theoretical_stock - d.reservation_stock as theoretical,
			d.actual_stock,
			d.fabric_no,
			d.version
		FROM
     		mtb_fabric AS a,mtb_fabric_brand AS b,mtb_factory AS c,mtb_stock AS d,mtb_maker e
 		WHERE
 		<if test="orderPattern!=null and orderPattern!=''">
			a.order_pattern = #{orderPattern} and
		</if>
 		<if test="fabricNo!=null and fabricNo!=''">
			a.fabric_no LIKE '%${fabricNo}%' and
		</if>
		<if test="color!=null and color!=''">
			a.color = #{color} and
		</if>
		<if test="pattern!=null and pattern!=''">
			a.pattern = #{pattern} and
		</if>
		<if test="brandName !=null and brandName !=''">
			b.fablic_brand_no = #{brandName} and
		</if>
		<if test="retailPrice!=null and retailPrice!='' or retailPrice == 0">
			a.retail_price &gt;= #{retailPrice} and
		</if>
		<if test="retailPriceTo!=null and retailPriceTo!='' or retailPriceTo == 0">
			a.retail_price &lt;= #{retailPriceTo} and
		</if>
		<if test="makerName!=null and makerName!=''">
			e.maker_code = #{makerName} and
		</if>
		<if test="factoryName!=null and factoryName!=''">
			c.factory_code = #{factoryName} and
		</if>
		a.fablic_brand_no = b.fablic_brand_no
 		AND a.factory_code = c.factory_code
 		AND a.fabric_no = d.fabric_no
 		And c.maker_code = e.maker_code
 		ORDER by a.fabric_no
	</select>
 
    <update id="updateStockByPk" parameterType="java.util.List">
        <foreach collection="stockUpd" item="item" index="index" open="" close="" separator=";">
        UPDATE
            mtb_stock 
        SET
        	order_pattern = #{item.orderPattern},
        	fabric_no = #{item.fabricNo},
            theoretical_stock = #{item.reservationStock} + #{item.theoretical}, 
            actual_stock = #{item.actualStock},
            version = #{item.version} + 1,
            created_user_id =#{item.createdUserId},
            updated_user_id =#{item.updatedUserId},
            updated_at = #{item.updatedAt} 
        WHERE
            fabric_no = #{item.fabricNo} and order_pattern = #{item.orderPattern} and version = #{item.version}
		</foreach>
    </update>
    
    <update id="updateStockValue">
        UPDATE
            mtb_stock 
        SET
            theoretical_stock = #{arg1}, 
            reservation_stock = #{arg2}
        WHERE
            fabric_no = #{arg0}
            and order_pattern = #{arg3}
    </update>
    
    <update id="updateTheoreticalStock">
        UPDATE
            mtb_stock 
        SET
            theoretical_stock = #{arg1}
        WHERE
            fabric_no = #{arg0}
            and order_pattern = #{arg2}
    </update>

</mapper>
