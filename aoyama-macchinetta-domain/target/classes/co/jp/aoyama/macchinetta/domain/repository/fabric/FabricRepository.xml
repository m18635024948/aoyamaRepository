<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.jp.aoyama.macchinetta.domain.repository.fabric.FabricRepository">

    <resultMap id="fabricResultMap" type="Fabric">
    	<id column="order_pattern" property="orderPattern" jdbcType="VARCHAR" />
	    <id column="fabric_no" property="fabricNo" jdbcType="VARCHAR" />
	    <result column="material_no" property="materialNo" jdbcType="VARCHAR" />
	    <result column="fablic_brand_no" property="fablicBrandNo" jdbcType="VARCHAR" />
	    <result column="store_brand" property="storeBrand" jdbcType="VARCHAR" />
	    <result column="season" property="season" jdbcType="VARCHAR" />
	    <result column="color" property="color" jdbcType="VARCHAR" />
	    <result column="pattern" property="pattern" jdbcType="VARCHAR" />
	    <result column="color_aoyama" property="colorAoyama" jdbcType="VARCHAR" />
	    <result column="pattern_aoyama" property="patternAoyama" jdbcType="VARCHAR" />
	    <result column="material_name" property="materialName" jdbcType="VARCHAR" />
	    <result column="item_class" property="itemClass" jdbcType="VARCHAR" />
	    <result column="coat_available" property="coatAvailable" jdbcType="VARCHAR" />
	    <result column="composition_label" property="compositionLabel" jdbcType="VARCHAR" />
	    <result column="factory_code" property="factoryCode" jdbcType="VARCHAR" />
	    <result column="maker_code" property="makerCode" jdbcType="VARCHAR" />
	    <result column="lcr_sewing_available" property="lcrSewingAvailable" jdbcType="VARCHAR" />
	    <result column="retail_price" property="retailPrice" jdbcType="INTEGER" />
	    <result column="additional_pants_rate" property="additionalPantsRate" jdbcType="INTEGER" />
	    <result column="additional_single_gilet_rate" property="additionalSingleGiletRate" jdbcType="INTEGER" />
	    <result column="additional_double_gilet_rate" property="additionalDoubleGiletRate" jdbcType="INTEGER" />
	    <result column="additional_double_jacket_rate" property="additionalDoubleJacketRate" jdbcType="INTEGER" />
	    <result column="single_jacket_only_rate" property="singleJacketOnlyRate" jdbcType="INTEGER" />
	    <result column="double_jacket_only_rate" property="doubleJacketOnlyRate" jdbcType="INTEGER" />
	    <result column="pant_only_rate" property="pantOnlyRate" jdbcType="INTEGER" />
	    <result column="single_gilet_only_rate" property="singleGiletOnlyRate" jdbcType="INTEGER" />
	    <result column="double_gilet_only_rate" property="doubleGiletOnlyRate" jdbcType="INTEGER" />
	    <result column="coat_single_only_rate" property="coatSingleOnlyRate" jdbcType="INTEGER" />
	    <result column="coat_double_only_rate" property="coatDoubleOnlyRate" jdbcType="INTEGER" />
	    <result column="jk_single_only_plus_alpha_price" property="jkSingleOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="jk_double_only_plus_alpha_price" property="jkDoubleOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="gl_single_only_plus_alpha_price" property="glSingleOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="gl_double_only_plus_alpha_price" property="glDoubleOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="pt_only_plus_alpha_price" property="ptOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="ct_single_only_plus_alpha_price" property="ctSingleOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="ct_double_only_plus_alpha_price" property="ctDoubleOnlyPlusAlphaPrice" jdbcType="INTEGER" />
	    <result column="fabric_price" property="fabricPrice" jdbcType="INTEGER" />
	    <result column="washable_available" property="washableAvailable" jdbcType="VARCHAR" />
	    <result column="tuxedo_available" property="tuxedoAvailable" jdbcType="VARCHAR" />
	    <result column="ws_price_adjust" property="wsPriceAdjust" jdbcType="INTEGER" />
	    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
	    <result column="spinning_limit_date" property="spinningLimitDate" jdbcType="DATE" />
	    <result column="fablic_importer" property="fablicImporter" jdbcType="VARCHAR" />
	    <result column="full_haircloth_available" property="fullHairclothAvailable" jdbcType="VARCHAR" />
	    <result column="shirt_sleeve_available" property="shirtSleeveAvailable" jdbcType="VARCHAR" />
	    <result column="store_delv_normal" property="storeDelvNormal" jdbcType="VARCHAR" />
	    <result column="store_delv_early" property="storeDelvEarly" jdbcType="VARCHAR" />
	    <result column="store_delv_coat" property="storeDelvCoat" jdbcType="VARCHAR" />
	    <result column="handling_caution" property="handlingCaution" jdbcType="VARCHAR" />
	    <result column="fabric_name_exist" property="fabricNameExist" jdbcType="VARCHAR" />
	    <result column="theoretical_stock" property="theoreticalStock" jdbcType="NUMERIC" />
	    <result column="reservation_stock" property="reservationStock" jdbcType="NUMERIC" />
	    <result column="actual_stock" property="actualStock" jdbcType="NUMERIC" />
	    <result column="fabric_version" property="fabricVersion" jdbcType="SMALLINT" />
	    <result column="stock_version" property="stockVersion" jdbcType="SMALLINT" />
	    <result column="created_user_id" property="createdUserId" jdbcType="VARCHAR" />
	    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
	    <result column="updated_user_id" property="updatedUserId" jdbcType="VARCHAR" />
	    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    </resultMap>
    
     <select id="fabricQueryByCoOrPo" resultMap="fabricResultMap">
     	SELECT 
	     	mtb_fabric.order_pattern, 
	     	mtb_fabric.fabric_no, 
	     	material_no, 
	        fablic_brand_no, 
	        store_brand, 
	        season, 
	        color, 
	        pattern, 
	        color_aoyama, 
	        pattern_aoyama, 
	        material_name, 
	        item_class, 
	        coat_available, 
	        composition_label, 
	        factory_code, 
	        maker_code, 
	        lcr_sewing_available, 
	        retail_price, 
	        additional_pants_rate, 
	        additional_single_gilet_rate, 
	        additional_double_gilet_rate, 
	        additional_double_jacket_rate, 
	        single_jacket_only_rate, 
	        double_jacket_only_rate, 
	        pant_only_rate, 
	        single_gilet_only_rate, 
	        double_gilet_only_rate, 
	        coat_single_only_rate, 
	        coat_double_only_rate, 
	        jk_single_only_plus_alpha_price, 
	        jk_double_only_plus_alpha_price, 
	        gl_single_only_plus_alpha_price, 
	        gl_double_only_plus_alpha_price, 
	        pt_only_plus_alpha_price, 
	        ct_single_only_plus_alpha_price, 
	        ct_double_only_plus_alpha_price, 
	        fabric_price, 
	        washable_available, 
	        tuxedo_available, 
	        ws_price_adjust, 
	        contract_no, 
	        spinning_limit_date, 
	        fablic_importer, 
	        full_haircloth_available, 
	        shirt_sleeve_available, 
	        store_delv_normal, 
	        store_delv_early, 
	        store_delv_coat, 
	        handling_caution, 
	        fabric_name_exist, 
	        mtb_stock.theoretical_stock, 
	        mtb_stock.reservation_stock, 
	        mtb_fabric.version AS fabric_version, 
	        mtb_stock.version AS stock_version, 
	        mtb_fabric.created_user_id, 
	        mtb_fabric.created_at, 
	        mtb_fabric.updated_user_id, 
	        mtb_fabric.updated_at
    	FROM 
    		mtb_fabric, mtb_stock
    	WHERE
    		mtb_fabric.order_pattern = mtb_stock.order_pattern AND
    		mtb_fabric.fabric_no = mtb_stock.fabric_no
    	ORDER BY
    		mtb_fabric.order_pattern, 
			mtb_fabric.fabric_no
	</select>
    
    <select id="fabricQueryByPrimaryKey" resultMap="fabricResultMap">
		SELECT
	     	mtb_fabric.order_pattern, 
	     	mtb_fabric.fabric_no, 
	     	material_no, 
	        fablic_brand_no, 
	        store_brand, 
	        season, 
	        color, 
	        pattern, 
	        color_aoyama, 
	        pattern_aoyama, 
	        material_name, 
	        item_class, 
	        coat_available, 
	        composition_label, 
	        factory_code, 
	        maker_code, 
	        lcr_sewing_available, 
	        retail_price, 
	        additional_pants_rate, 
	        additional_single_gilet_rate, 
	        additional_double_gilet_rate, 
	        additional_double_jacket_rate, 
	        single_jacket_only_rate, 
	        double_jacket_only_rate, 
	        pant_only_rate, 
	        single_gilet_only_rate, 
	        double_gilet_only_rate, 
	        coat_single_only_rate, 
	        coat_double_only_rate, 
	        jk_single_only_plus_alpha_price, 
	        jk_double_only_plus_alpha_price, 
	        gl_single_only_plus_alpha_price, 
	        gl_double_only_plus_alpha_price, 
	        pt_only_plus_alpha_price, 
	        ct_single_only_plus_alpha_price, 
	        ct_double_only_plus_alpha_price, 
	        fabric_price, 
	        washable_available, 
	        tuxedo_available, 
	        ws_price_adjust, 
	        contract_no, 
	        spinning_limit_date, 
	        fablic_importer, 
	        full_haircloth_available, 
	        shirt_sleeve_available, 
	        store_delv_normal, 
	        store_delv_early, 
	        store_delv_coat, 
	        handling_caution, 
	        fabric_name_exist, 
	        mtb_stock.theoretical_stock, 
	        mtb_stock.reservation_stock, 
	        mtb_fabric.version AS fabric_version, 
	        mtb_stock.version AS stock_version, 
	        mtb_fabric.created_user_id, 
	        mtb_fabric.created_at, 
	        mtb_fabric.updated_user_id, 
	        mtb_fabric.updated_at
		FROM
			mtb_fabric, mtb_stock
		WHERE
			mtb_fabric.order_pattern = #{orderPattern,jdbcType=VARCHAR} AND 
			mtb_fabric.fabric_no = #{fabricNo,jdbcType=VARCHAR} AND
			mtb_fabric.order_pattern = mtb_stock.order_pattern AND
			mtb_fabric.fabric_no = mtb_stock.fabric_no
	</select>
	
	<insert id="fabricInsertByPrimaryKey" parameterType="java.util.List">
		INSERT 
		INTO 
			mtb_fabric 
			(order_pattern, 
	     	fabric_no, 
	     	material_no, 
	        fablic_brand_no, 
	        store_brand, 
	        season, 
	        color, 
	        pattern, 
	        color_aoyama, 
	        pattern_aoyama, 
	        material_name, 
	        item_class, 
	        coat_available, 
	        composition_label, 
	        factory_code, 
	        maker_code, 
	        lcr_sewing_available, 
	        retail_price, 
	        additional_pants_rate, 
	        additional_single_gilet_rate, 
	        additional_double_gilet_rate, 
	        additional_double_jacket_rate, 
	        single_jacket_only_rate, 
	        double_jacket_only_rate, 
	        pant_only_rate, 
	        single_gilet_only_rate, 
	        double_gilet_only_rate, 
	        coat_single_only_rate, 
	        coat_double_only_rate, 
	        jk_single_only_plus_alpha_price, 
	        jk_double_only_plus_alpha_price, 
	        gl_single_only_plus_alpha_price, 
	        gl_double_only_plus_alpha_price, 
	        pt_only_plus_alpha_price, 
	        ct_single_only_plus_alpha_price, 
	        ct_double_only_plus_alpha_price, 
	        fabric_price, 
	        washable_available, 
	        tuxedo_available, 
	        ws_price_adjust, 
	        contract_no, 
	        spinning_limit_date, 
	        fablic_importer, 
	        full_haircloth_available, 
	        shirt_sleeve_available, 
	        store_delv_normal, 
	        store_delv_early, 
	        store_delv_coat, 
	        handling_caution, 
	        fabric_name_exist, 
	        version, 
	        created_user_id, 
	        created_at, 
	        updated_user_id, 
	        updated_at) 
		VALUES
		<foreach collection="fabricInsertList" item="item" index="index" separator=",">
            (#{item.orderPattern,jdbcType=VARCHAR}, 
             #{item.fabricNo,jdbcType=VARCHAR}, 
		     #{item.materialNo,jdbcType=VARCHAR}, 
             #{item.fablicBrandNo,jdbcType=VARCHAR}, 
		     #{item.storeBrand,jdbcType=VARCHAR}, 
		     #{item.season,jdbcType=VARCHAR}, 
		     #{item.color,jdbcType=VARCHAR}, 
		     #{item.pattern,jdbcType=VARCHAR}, 
		     #{item.colorAoyama,jdbcType=VARCHAR}, 
		     #{item.patternAoyama,jdbcType=VARCHAR}, 
		     #{item.materialName,jdbcType=VARCHAR}, 
		     #{item.itemClass,jdbcType=VARCHAR}, 
		     #{item.coatAvailable,jdbcType=VARCHAR}, 
		     #{item.compositionLabel,jdbcType=VARCHAR}, 
		     #{item.factoryCode,jdbcType=VARCHAR}, 
		     #{item.makerCode,jdbcType=VARCHAR}, 
		     #{item.lcrSewingAvailable,jdbcType=VARCHAR}, 
		     #{item.retailPrice,jdbcType=INTEGER}, 
		     #{item.additionalPantsRate,jdbcType=INTEGER}, 
		     #{item.additionalSingleGiletRate,jdbcType=INTEGER}, 
		     #{item.additionalDoubleGiletRate,jdbcType=INTEGER}, 
		     #{item.additionalDoubleJacketRate,jdbcType=INTEGER}, 
		     #{item.singleJacketOnlyRate,jdbcType=INTEGER}, 
		     #{item.doubleJacketOnlyRate,jdbcType=INTEGER}, 
		     #{item.pantOnlyRate,jdbcType=INTEGER}, 
		     #{item.singleGiletOnlyRate,jdbcType=INTEGER}, 
		     #{item.doubleGiletOnlyRate,jdbcType=INTEGER}, 
		     #{item.coatSingleOnlyRate,jdbcType=INTEGER}, 
		     #{item.coatDoubleOnlyRate,jdbcType=INTEGER}, 
		     #{item.jkSingleOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.jkDoubleOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.glSingleOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.glDoubleOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.ptOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.ctSingleOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.ctDoubleOnlyPlusAlphaPrice,jdbcType=INTEGER}, 
		     #{item.fabricPrice,jdbcType=INTEGER}, 
		     #{item.washableAvailable,jdbcType=VARCHAR}, 
		     #{item.tuxedoAvailable,jdbcType=VARCHAR}, 
		     #{item.wsPriceAdjust,jdbcType=INTEGER}, 
		     #{item.contractNo,jdbcType=VARCHAR}, 
		     #{item.spinningLimitDate,jdbcType=DATE}, 
		     #{item.fablicImporter,jdbcType=VARCHAR}, 
		     #{item.fullHairclothAvailable,jdbcType=VARCHAR}, 
		     #{item.shirtSleeveAvailable,jdbcType=VARCHAR}, 
		     #{item.storeDelvNormal,jdbcType=VARCHAR}, 
		     #{item.storeDelvEarly,jdbcType=VARCHAR}, 
		     #{item.storeDelvCoat,jdbcType=VARCHAR}, 
		     #{item.handlingCaution,jdbcType=VARCHAR}, 
		     #{item.fabricNameExist,jdbcType=VARCHAR}, 
		     #{item.fabricVersion,jdbcType=SMALLINT}, 
		     #{item.createdUserId,jdbcType=VARCHAR}, 
		     #{item.createdAt,jdbcType=TIMESTAMP}, 
		     #{item.updatedUserId,jdbcType=VARCHAR}, 
		     #{item.updatedAt,jdbcType=TIMESTAMP})
		 </foreach>
	</insert>	
	
	<insert id="stockInsertByPrimaryKey" parameterType="java.util.List">
		INSERT 
		INTO 
			mtb_stock 
			(order_pattern, 
			fabric_no, 
			theoretical_stock, 
			reservation_stock,
			actual_stock,
			version, 
			created_user_id, 
	        created_at, 
	        updated_user_id, 
	        updated_at) 
		VALUES
		<foreach collection="stockInsertList" item="item" index="index" separator=",">
            (#{item.orderPattern,jdbcType=VARCHAR},
             #{item.fabricNo,jdbcType=VARCHAR}, 
             #{item.theoreticalStock,jdbcType=NUMERIC}, 
             #{item.reservationStock,jdbcType=NUMERIC}, 
             #{item.actualStock,jdbcType=NUMERIC}, 
             #{item.stockVersion,jdbcType=SMALLINT}, 
             #{item.createdUserId,jdbcType=VARCHAR}, 
		     #{item.createdAt,jdbcType=TIMESTAMP}, 
		     #{item.updatedUserId,jdbcType=VARCHAR}, 
		     #{item.updatedAt,jdbcType=TIMESTAMP})
        </foreach>
	</insert>
	
	<update id="fabricUpdateByPrimaryKey" parameterType="java.util.List">
		<foreach collection="fabricUpdateList" item="item" index="index" open="" close="" separator=";">
		UPDATE
            mtb_fabric 
        SET
		    material_no = #{item.materialNo,jdbcType=VARCHAR},
		    fablic_brand_no = #{item.fablicBrandNo,jdbcType=VARCHAR},
		    store_brand = #{item.storeBrand,jdbcType=VARCHAR},
		    season = #{item.season,jdbcType=VARCHAR},
		    color = #{item.color,jdbcType=VARCHAR},
		    pattern = #{item.pattern,jdbcType=VARCHAR},
		    color_aoyama = #{item.colorAoyama,jdbcType=VARCHAR},
		    pattern_aoyama = #{item.patternAoyama,jdbcType=VARCHAR},
		    material_name = #{item.materialName,jdbcType=VARCHAR},
		    item_class = #{item.itemClass,jdbcType=VARCHAR},
		    coat_available = #{item.coatAvailable,jdbcType=VARCHAR},
		    composition_label = #{item.compositionLabel,jdbcType=VARCHAR},
		    factory_code = #{item.factoryCode,jdbcType=VARCHAR},
		    maker_code = #{item.makerCode,jdbcType=VARCHAR},
		    lcr_sewing_available = #{item.lcrSewingAvailable,jdbcType=VARCHAR},
		    retail_price = #{item.retailPrice,jdbcType=INTEGER},
		    additional_pants_rate = #{item.additionalPantsRate,jdbcType=INTEGER},
		    additional_single_gilet_rate = #{item.additionalSingleGiletRate,jdbcType=INTEGER},
		    additional_double_gilet_rate = #{item.additionalDoubleGiletRate,jdbcType=INTEGER},
		    additional_double_jacket_rate = #{item.additionalDoubleJacketRate,jdbcType=INTEGER},
		    single_jacket_only_rate = #{item.singleJacketOnlyRate,jdbcType=INTEGER},
		    double_jacket_only_rate = #{item.doubleJacketOnlyRate,jdbcType=INTEGER},
		    pant_only_rate = #{item.pantOnlyRate,jdbcType=INTEGER},
		    single_gilet_only_rate = #{item.singleGiletOnlyRate,jdbcType=INTEGER},
		    double_gilet_only_rate = #{item.doubleGiletOnlyRate,jdbcType=INTEGER},
		    coat_single_only_rate = #{item.coatSingleOnlyRate,jdbcType=INTEGER},
		    coat_double_only_rate = #{item.coatDoubleOnlyRate,jdbcType=INTEGER},
		    jk_single_only_plus_alpha_price = #{item.jkSingleOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    jk_double_only_plus_alpha_price = #{item.jkDoubleOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    gl_single_only_plus_alpha_price = #{item.glSingleOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    gl_double_only_plus_alpha_price = #{item.glDoubleOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    pt_only_plus_alpha_price = #{item.ptOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    ct_single_only_plus_alpha_price = #{item.ctSingleOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    ct_double_only_plus_alpha_price = #{item.ctDoubleOnlyPlusAlphaPrice,jdbcType=INTEGER},
		    fabric_price = #{item.fabricPrice,jdbcType=INTEGER},
		    washable_available = #{item.washableAvailable,jdbcType=VARCHAR},
		    tuxedo_available = #{item.tuxedoAvailable,jdbcType=VARCHAR},
		    ws_price_adjust = #{item.wsPriceAdjust,jdbcType=INTEGER},
		    contract_no = #{item.contractNo,jdbcType=VARCHAR},
		    spinning_limit_date = #{item.spinningLimitDate,jdbcType=DATE},
		    fablic_importer = #{item.fablicImporter,jdbcType=VARCHAR},
		    full_haircloth_available = #{item.fullHairclothAvailable,jdbcType=VARCHAR},
		    shirt_sleeve_available = #{item.shirtSleeveAvailable,jdbcType=VARCHAR},
		    store_delv_normal = #{item.storeDelvNormal,jdbcType=VARCHAR},
		    store_delv_early = #{item.storeDelvEarly,jdbcType=VARCHAR},
		    store_delv_coat = #{item.storeDelvCoat,jdbcType=VARCHAR},
		    handling_caution = #{item.handlingCaution,jdbcType=VARCHAR},
		    fabric_name_exist = #{item.fabricNameExist,jdbcType=VARCHAR},
		    version = #{item.fabricVersion,jdbcType=VARCHAR},
		    updated_user_id = #{item.updatedUserId,jdbcType=VARCHAR},
		    updated_at = #{item.updatedAt,jdbcType=TIMESTAMP}
        WHERE
            order_pattern = #{item.orderPattern,jdbcType=VARCHAR} AND 
			fabric_no = #{item.fabricNo,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<update id="stockUpdateByPrimaryKey" parameterType="java.util.List">
		<foreach collection="stockUpdateList" item="item" index="index" open="" close="" separator=";">
		UPDATE
            mtb_stock 
        SET
        	theoretical_stock = #{item.theoreticalStock,jdbcType=NUMERIC}, 
        	version = #{item.stockVersion,jdbcType=VARCHAR},
        	updated_user_id = #{item.updatedUserId,jdbcType=VARCHAR},
		    updated_at = #{item.updatedAt,jdbcType=TIMESTAMP}
        WHERE
        	order_pattern = #{item.orderPattern,jdbcType=VARCHAR} AND
			fabric_no = #{item.fabricNo,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="fabricDeleteByPrimaryKey" parameterType="java.util.List">
		<foreach collection="fabricDeleteList" item="item" index="index" open="" separator=";" close="">
			DELETE 
			FROM 
				mtb_fabric 
			WHERE
	            order_pattern = #{item.orderPattern,jdbcType=VARCHAR} AND 
				fabric_no = #{item.fabricNo,jdbcType=VARCHAR}
		</foreach>
	</delete>
	
	<delete id="stockDeleteByPrimaryKey" parameterType="java.util.List">
		<foreach collection="stockDeleteList" item="item" index="index" open="" separator=";" close="">
			DELETE 
			FROM 
				mtb_stock 
			WHERE
				order_pattern = #{item.orderPattern,jdbcType=VARCHAR} AND 
				fabric_no = #{item.fabricNo,jdbcType=VARCHAR}
		</foreach>
	</delete>
	
	<select id="fablicBrandNoQuery" resultMap="fabricResultMap">
		SELECT
	     	fablic_brand_no 
		FROM
			mtb_fabric_brand
		WHERE
			fablic_brand_no = #{fablicBrandNo,jdbcType=VARCHAR} 
	</select>
</mapper>
    