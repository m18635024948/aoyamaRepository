<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.jp.aoyama.macchinetta.domain.repository.delivery.ShopDeliveryRepository" >

  <resultMap id="ShopDeliveryResultMap" type="ShopDelivery" >
    <id column="shop_delivery_class" property="shopDeliveryClass" jdbcType="VARCHAR" />
    <id column="order_on_start_date" property="orderOnStartDate" jdbcType="DATE" />
    <id column="order_on_end_date" property="orderOnEndDate" jdbcType="DATE" />
    <result column="shop_delivery_on" property="shopDeliveryOn" jdbcType="DATE" />
    <result column="version" property="version" jdbcType="SMALLINT" />
    <result column="created_user_id" property="createdUserId" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_user_id" property="updatedUserId" jdbcType="VARCHAR" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="shopDeliveryQueryByPrimaryKey" resultMap="ShopDeliveryResultMap" >
    SELECT 
    	shop_delivery_class, 
		order_on_start_date,
    	order_on_end_date, 
    	shop_delivery_on, 
    	version, 
    	created_user_id, 
    	created_at, 
    	updated_user_id, 
    	updated_at
    FROM 
    	mtb_shop_delivery
    WHERE 
    	shop_delivery_class = #{shopDeliveryClass,jdbcType=VARCHAR} and 
    	order_on_start_date = #{orderOnStartDate,jdbcType=DATE} and 
    	order_on_end_date = #{orderOnEndDate,jdbcType=DATE}
    ORDER BY
		shop_delivery_class, 
    	order_on_start_date
  </select>
  
  <select id="shopDeliveryQueryFuzzy" resultMap="ShopDeliveryResultMap">	
	SELECT 
    	shop_delivery_class, 
		order_on_start_date,
    	order_on_end_date, 
    	shop_delivery_on, 
    	version, 
    	created_user_id, 
    	created_at, 
    	updated_user_id, 
    	updated_at
	FROM
        mtb_shop_delivery
	WHERE
		<if test="shopDeliveryClass!=null and shopDeliveryClass!=''">
			shop_delivery_class = #{shopDeliveryClass,jdbcType=VARCHAR} and 
		</if>
		<if test="orderOnStartDate!=null">
    		order_on_start_date &lt;= #{orderOnStartDate,jdbcType=DATE} and 
		</if>
		<if test="orderOnEndDate!=null">
	    	order_on_end_date &gt;= #{orderOnEndDate,jdbcType=DATE}  and 
		</if>
		1 = 1 
	ORDER BY
		shop_delivery_class, 
    	order_on_start_date
	</select>
	
	<select id="shopDeliveryQueryIntersection" resultType="integer">	
	SELECT COUNT(1)
	FROM
        mtb_shop_delivery
	WHERE
		shop_delivery_class = #{shopDeliveryClass,jdbcType=VARCHAR} and 
    	order_on_start_date &lt;= #{orderOnEndDate,jdbcType=DATE} and 
    	order_on_end_date &gt;= #{orderOnStartDate,jdbcType=DATE}
	</select>
	
	<insert id="insertShopDeliveryByPrimaryKey"  parameterType="java.util.List">
    INSERT 
    INTO 
    	mtb_shop_delivery 
    	(shop_delivery_class, 
		order_on_start_date,
    	order_on_end_date, 
    	shop_delivery_on, 
    	version, 
    	created_user_id, 
    	created_at, 
    	updated_user_id, 
    	updated_at)
    VALUES
    <foreach collection="shopDeliveryInsertList" item="item" index="index" separator=","> 
		(#{item.shopDeliveryClass,jdbcType=VARCHAR},
		#{item.orderOnStartDate,jdbcType=DATE}, 
		#{item.orderOnEndDate,jdbcType=DATE}, 
      	#{item.shopDeliveryOn,jdbcType=DATE}, 
      	#{item.version,jdbcType=SMALLINT}, 
      	#{item.createdUserId,jdbcType=VARCHAR}, 
      	#{item.createdAt,jdbcType=TIMESTAMP}, 
      	#{item.updatedUserId,jdbcType=VARCHAR}, 
      	#{item.updatedAt,jdbcType=TIMESTAMP})
	</foreach>
  </insert>
  
  <update id="updateShopDeliveryByPrimaryKey" parameterType="java.util.List" >
	<foreach collection="shopDeliveryUpdateList" item="item" index="index" open="" close="" separator=";">
    UPDATE 
    	mtb_shop_delivery
    SET 
    	shop_delivery_on = #{item.shopDeliveryOn,jdbcType=DATE},
    	version = #{item.version,jdbcType=SMALLINT}, 
      	updated_user_id = #{item.updatedUserId,jdbcType=VARCHAR},
      	updated_at = #{item.updatedAt,jdbcType=TIMESTAMP}
    WHERE 
    	shop_delivery_class = #{item.shopDeliveryClass,jdbcType=VARCHAR} and 
    	order_on_start_date = #{item.orderOnStartDate,jdbcType=DATE} and 
    	order_on_end_date = #{item.orderOnEndDate,jdbcType=DATE}
	</foreach>
  </update>
  
  <delete id="deleteShopDeliveryByPrimaryKey" parameterType="java.util.List" >
  	<foreach collection="shopDeliveryDeleteList" item="item" index="index" open="" separator=";" close="">
    DELETE 
    FROM 
    	mtb_shop_delivery
    WHERE 
    	shop_delivery_class = #{item.shopDeliveryClass,jdbcType=VARCHAR} and 
    	order_on_start_date = #{item.orderOnStartDate,jdbcType=DATE} and 
    	order_on_end_date = #{item.orderOnEndDate,jdbcType=DATE}
    </foreach>
  </delete>
  
	<select id="orderOnStartDateQuery" resultType="Date">	
	SELECT 
		order_on_end_date
	FROM
        mtb_shop_delivery
	WHERE
		shop_delivery_class = #{shopDeliveryStartOnStartDate.shopDeliveryClass,jdbcType=VARCHAR} and 
   		order_on_end_date &lt;= #{shopDeliveryStartOnStartDate.orderOnStartDate,jdbcType=DATE}
   	ORDER BY
    	order_on_end_date DESC
	</select>
	
	<select id="orderOnEndDateQuery" resultType="Date">	
	SELECT 
		order_on_start_date
	FROM
        mtb_shop_delivery
	WHERE
		shop_delivery_class = #{shopDeliveryStartOnEndDate.shopDeliveryClass,jdbcType=VARCHAR} and 
   		order_on_start_date &gt;= #{shopDeliveryStartOnEndDate.orderOnEndDate,jdbcType=DATE}
   	ORDER BY
    	order_on_start_date ASC
	</select>
  
</mapper>